#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5931037656412210587) {
   out_5931037656412210587[0] = 0;
   out_5931037656412210587[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5931037656412210587[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5931037656412210587[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5931037656412210587[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5931037656412210587[5] = -sin(in_vec[1]);
   out_5931037656412210587[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5931037656412210587[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5931037656412210587[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5931037656412210587[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5931037656412210587[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5931037656412210587[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5931037656412210587[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5931037656412210587[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5931037656412210587[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5931037656412210587[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5931037656412210587[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5931037656412210587[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_238307230270618879) {
   out_238307230270618879[0] = delta_x[0] + nom_x[0];
   out_238307230270618879[1] = delta_x[1] + nom_x[1];
   out_238307230270618879[2] = delta_x[2] + nom_x[2];
   out_238307230270618879[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_238307230270618879[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_238307230270618879[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_238307230270618879[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_238307230270618879[7] = delta_x[6] + nom_x[7];
   out_238307230270618879[8] = delta_x[7] + nom_x[8];
   out_238307230270618879[9] = delta_x[8] + nom_x[9];
   out_238307230270618879[10] = delta_x[9] + nom_x[10];
   out_238307230270618879[11] = delta_x[10] + nom_x[11];
   out_238307230270618879[12] = delta_x[11] + nom_x[12];
   out_238307230270618879[13] = delta_x[12] + nom_x[13];
   out_238307230270618879[14] = delta_x[13] + nom_x[14];
   out_238307230270618879[15] = delta_x[14] + nom_x[15];
   out_238307230270618879[16] = delta_x[15] + nom_x[16];
   out_238307230270618879[17] = delta_x[16] + nom_x[17];
   out_238307230270618879[18] = delta_x[17] + nom_x[18];
   out_238307230270618879[19] = delta_x[18] + nom_x[19];
   out_238307230270618879[20] = delta_x[19] + nom_x[20];
   out_238307230270618879[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6996259531543842646) {
   out_6996259531543842646[0] = -nom_x[0] + true_x[0];
   out_6996259531543842646[1] = -nom_x[1] + true_x[1];
   out_6996259531543842646[2] = -nom_x[2] + true_x[2];
   out_6996259531543842646[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6996259531543842646[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6996259531543842646[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6996259531543842646[6] = -nom_x[7] + true_x[7];
   out_6996259531543842646[7] = -nom_x[8] + true_x[8];
   out_6996259531543842646[8] = -nom_x[9] + true_x[9];
   out_6996259531543842646[9] = -nom_x[10] + true_x[10];
   out_6996259531543842646[10] = -nom_x[11] + true_x[11];
   out_6996259531543842646[11] = -nom_x[12] + true_x[12];
   out_6996259531543842646[12] = -nom_x[13] + true_x[13];
   out_6996259531543842646[13] = -nom_x[14] + true_x[14];
   out_6996259531543842646[14] = -nom_x[15] + true_x[15];
   out_6996259531543842646[15] = -nom_x[16] + true_x[16];
   out_6996259531543842646[16] = -nom_x[17] + true_x[17];
   out_6996259531543842646[17] = -nom_x[18] + true_x[18];
   out_6996259531543842646[18] = -nom_x[19] + true_x[19];
   out_6996259531543842646[19] = -nom_x[20] + true_x[20];
   out_6996259531543842646[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8148689651805700146) {
   out_8148689651805700146[0] = 1.0;
   out_8148689651805700146[1] = 0;
   out_8148689651805700146[2] = 0;
   out_8148689651805700146[3] = 0;
   out_8148689651805700146[4] = 0;
   out_8148689651805700146[5] = 0;
   out_8148689651805700146[6] = 0;
   out_8148689651805700146[7] = 0;
   out_8148689651805700146[8] = 0;
   out_8148689651805700146[9] = 0;
   out_8148689651805700146[10] = 0;
   out_8148689651805700146[11] = 0;
   out_8148689651805700146[12] = 0;
   out_8148689651805700146[13] = 0;
   out_8148689651805700146[14] = 0;
   out_8148689651805700146[15] = 0;
   out_8148689651805700146[16] = 0;
   out_8148689651805700146[17] = 0;
   out_8148689651805700146[18] = 0;
   out_8148689651805700146[19] = 0;
   out_8148689651805700146[20] = 0;
   out_8148689651805700146[21] = 0;
   out_8148689651805700146[22] = 1.0;
   out_8148689651805700146[23] = 0;
   out_8148689651805700146[24] = 0;
   out_8148689651805700146[25] = 0;
   out_8148689651805700146[26] = 0;
   out_8148689651805700146[27] = 0;
   out_8148689651805700146[28] = 0;
   out_8148689651805700146[29] = 0;
   out_8148689651805700146[30] = 0;
   out_8148689651805700146[31] = 0;
   out_8148689651805700146[32] = 0;
   out_8148689651805700146[33] = 0;
   out_8148689651805700146[34] = 0;
   out_8148689651805700146[35] = 0;
   out_8148689651805700146[36] = 0;
   out_8148689651805700146[37] = 0;
   out_8148689651805700146[38] = 0;
   out_8148689651805700146[39] = 0;
   out_8148689651805700146[40] = 0;
   out_8148689651805700146[41] = 0;
   out_8148689651805700146[42] = 0;
   out_8148689651805700146[43] = 0;
   out_8148689651805700146[44] = 1.0;
   out_8148689651805700146[45] = 0;
   out_8148689651805700146[46] = 0;
   out_8148689651805700146[47] = 0;
   out_8148689651805700146[48] = 0;
   out_8148689651805700146[49] = 0;
   out_8148689651805700146[50] = 0;
   out_8148689651805700146[51] = 0;
   out_8148689651805700146[52] = 0;
   out_8148689651805700146[53] = 0;
   out_8148689651805700146[54] = 0;
   out_8148689651805700146[55] = 0;
   out_8148689651805700146[56] = 0;
   out_8148689651805700146[57] = 0;
   out_8148689651805700146[58] = 0;
   out_8148689651805700146[59] = 0;
   out_8148689651805700146[60] = 0;
   out_8148689651805700146[61] = 0;
   out_8148689651805700146[62] = 0;
   out_8148689651805700146[63] = 0;
   out_8148689651805700146[64] = 0;
   out_8148689651805700146[65] = 0;
   out_8148689651805700146[66] = -0.5*state[4];
   out_8148689651805700146[67] = -0.5*state[5];
   out_8148689651805700146[68] = -0.5*state[6];
   out_8148689651805700146[69] = 0;
   out_8148689651805700146[70] = 0;
   out_8148689651805700146[71] = 0;
   out_8148689651805700146[72] = 0;
   out_8148689651805700146[73] = 0;
   out_8148689651805700146[74] = 0;
   out_8148689651805700146[75] = 0;
   out_8148689651805700146[76] = 0;
   out_8148689651805700146[77] = 0;
   out_8148689651805700146[78] = 0;
   out_8148689651805700146[79] = 0;
   out_8148689651805700146[80] = 0;
   out_8148689651805700146[81] = 0;
   out_8148689651805700146[82] = 0;
   out_8148689651805700146[83] = 0;
   out_8148689651805700146[84] = 0;
   out_8148689651805700146[85] = 0;
   out_8148689651805700146[86] = 0;
   out_8148689651805700146[87] = 0.5*state[3];
   out_8148689651805700146[88] = 0.5*state[6];
   out_8148689651805700146[89] = -0.5*state[5];
   out_8148689651805700146[90] = 0;
   out_8148689651805700146[91] = 0;
   out_8148689651805700146[92] = 0;
   out_8148689651805700146[93] = 0;
   out_8148689651805700146[94] = 0;
   out_8148689651805700146[95] = 0;
   out_8148689651805700146[96] = 0;
   out_8148689651805700146[97] = 0;
   out_8148689651805700146[98] = 0;
   out_8148689651805700146[99] = 0;
   out_8148689651805700146[100] = 0;
   out_8148689651805700146[101] = 0;
   out_8148689651805700146[102] = 0;
   out_8148689651805700146[103] = 0;
   out_8148689651805700146[104] = 0;
   out_8148689651805700146[105] = 0;
   out_8148689651805700146[106] = 0;
   out_8148689651805700146[107] = 0;
   out_8148689651805700146[108] = -0.5*state[6];
   out_8148689651805700146[109] = 0.5*state[3];
   out_8148689651805700146[110] = 0.5*state[4];
   out_8148689651805700146[111] = 0;
   out_8148689651805700146[112] = 0;
   out_8148689651805700146[113] = 0;
   out_8148689651805700146[114] = 0;
   out_8148689651805700146[115] = 0;
   out_8148689651805700146[116] = 0;
   out_8148689651805700146[117] = 0;
   out_8148689651805700146[118] = 0;
   out_8148689651805700146[119] = 0;
   out_8148689651805700146[120] = 0;
   out_8148689651805700146[121] = 0;
   out_8148689651805700146[122] = 0;
   out_8148689651805700146[123] = 0;
   out_8148689651805700146[124] = 0;
   out_8148689651805700146[125] = 0;
   out_8148689651805700146[126] = 0;
   out_8148689651805700146[127] = 0;
   out_8148689651805700146[128] = 0;
   out_8148689651805700146[129] = 0.5*state[5];
   out_8148689651805700146[130] = -0.5*state[4];
   out_8148689651805700146[131] = 0.5*state[3];
   out_8148689651805700146[132] = 0;
   out_8148689651805700146[133] = 0;
   out_8148689651805700146[134] = 0;
   out_8148689651805700146[135] = 0;
   out_8148689651805700146[136] = 0;
   out_8148689651805700146[137] = 0;
   out_8148689651805700146[138] = 0;
   out_8148689651805700146[139] = 0;
   out_8148689651805700146[140] = 0;
   out_8148689651805700146[141] = 0;
   out_8148689651805700146[142] = 0;
   out_8148689651805700146[143] = 0;
   out_8148689651805700146[144] = 0;
   out_8148689651805700146[145] = 0;
   out_8148689651805700146[146] = 0;
   out_8148689651805700146[147] = 0;
   out_8148689651805700146[148] = 0;
   out_8148689651805700146[149] = 0;
   out_8148689651805700146[150] = 0;
   out_8148689651805700146[151] = 0;
   out_8148689651805700146[152] = 0;
   out_8148689651805700146[153] = 1.0;
   out_8148689651805700146[154] = 0;
   out_8148689651805700146[155] = 0;
   out_8148689651805700146[156] = 0;
   out_8148689651805700146[157] = 0;
   out_8148689651805700146[158] = 0;
   out_8148689651805700146[159] = 0;
   out_8148689651805700146[160] = 0;
   out_8148689651805700146[161] = 0;
   out_8148689651805700146[162] = 0;
   out_8148689651805700146[163] = 0;
   out_8148689651805700146[164] = 0;
   out_8148689651805700146[165] = 0;
   out_8148689651805700146[166] = 0;
   out_8148689651805700146[167] = 0;
   out_8148689651805700146[168] = 0;
   out_8148689651805700146[169] = 0;
   out_8148689651805700146[170] = 0;
   out_8148689651805700146[171] = 0;
   out_8148689651805700146[172] = 0;
   out_8148689651805700146[173] = 0;
   out_8148689651805700146[174] = 0;
   out_8148689651805700146[175] = 1.0;
   out_8148689651805700146[176] = 0;
   out_8148689651805700146[177] = 0;
   out_8148689651805700146[178] = 0;
   out_8148689651805700146[179] = 0;
   out_8148689651805700146[180] = 0;
   out_8148689651805700146[181] = 0;
   out_8148689651805700146[182] = 0;
   out_8148689651805700146[183] = 0;
   out_8148689651805700146[184] = 0;
   out_8148689651805700146[185] = 0;
   out_8148689651805700146[186] = 0;
   out_8148689651805700146[187] = 0;
   out_8148689651805700146[188] = 0;
   out_8148689651805700146[189] = 0;
   out_8148689651805700146[190] = 0;
   out_8148689651805700146[191] = 0;
   out_8148689651805700146[192] = 0;
   out_8148689651805700146[193] = 0;
   out_8148689651805700146[194] = 0;
   out_8148689651805700146[195] = 0;
   out_8148689651805700146[196] = 0;
   out_8148689651805700146[197] = 1.0;
   out_8148689651805700146[198] = 0;
   out_8148689651805700146[199] = 0;
   out_8148689651805700146[200] = 0;
   out_8148689651805700146[201] = 0;
   out_8148689651805700146[202] = 0;
   out_8148689651805700146[203] = 0;
   out_8148689651805700146[204] = 0;
   out_8148689651805700146[205] = 0;
   out_8148689651805700146[206] = 0;
   out_8148689651805700146[207] = 0;
   out_8148689651805700146[208] = 0;
   out_8148689651805700146[209] = 0;
   out_8148689651805700146[210] = 0;
   out_8148689651805700146[211] = 0;
   out_8148689651805700146[212] = 0;
   out_8148689651805700146[213] = 0;
   out_8148689651805700146[214] = 0;
   out_8148689651805700146[215] = 0;
   out_8148689651805700146[216] = 0;
   out_8148689651805700146[217] = 0;
   out_8148689651805700146[218] = 0;
   out_8148689651805700146[219] = 1.0;
   out_8148689651805700146[220] = 0;
   out_8148689651805700146[221] = 0;
   out_8148689651805700146[222] = 0;
   out_8148689651805700146[223] = 0;
   out_8148689651805700146[224] = 0;
   out_8148689651805700146[225] = 0;
   out_8148689651805700146[226] = 0;
   out_8148689651805700146[227] = 0;
   out_8148689651805700146[228] = 0;
   out_8148689651805700146[229] = 0;
   out_8148689651805700146[230] = 0;
   out_8148689651805700146[231] = 0;
   out_8148689651805700146[232] = 0;
   out_8148689651805700146[233] = 0;
   out_8148689651805700146[234] = 0;
   out_8148689651805700146[235] = 0;
   out_8148689651805700146[236] = 0;
   out_8148689651805700146[237] = 0;
   out_8148689651805700146[238] = 0;
   out_8148689651805700146[239] = 0;
   out_8148689651805700146[240] = 0;
   out_8148689651805700146[241] = 1.0;
   out_8148689651805700146[242] = 0;
   out_8148689651805700146[243] = 0;
   out_8148689651805700146[244] = 0;
   out_8148689651805700146[245] = 0;
   out_8148689651805700146[246] = 0;
   out_8148689651805700146[247] = 0;
   out_8148689651805700146[248] = 0;
   out_8148689651805700146[249] = 0;
   out_8148689651805700146[250] = 0;
   out_8148689651805700146[251] = 0;
   out_8148689651805700146[252] = 0;
   out_8148689651805700146[253] = 0;
   out_8148689651805700146[254] = 0;
   out_8148689651805700146[255] = 0;
   out_8148689651805700146[256] = 0;
   out_8148689651805700146[257] = 0;
   out_8148689651805700146[258] = 0;
   out_8148689651805700146[259] = 0;
   out_8148689651805700146[260] = 0;
   out_8148689651805700146[261] = 0;
   out_8148689651805700146[262] = 0;
   out_8148689651805700146[263] = 1.0;
   out_8148689651805700146[264] = 0;
   out_8148689651805700146[265] = 0;
   out_8148689651805700146[266] = 0;
   out_8148689651805700146[267] = 0;
   out_8148689651805700146[268] = 0;
   out_8148689651805700146[269] = 0;
   out_8148689651805700146[270] = 0;
   out_8148689651805700146[271] = 0;
   out_8148689651805700146[272] = 0;
   out_8148689651805700146[273] = 0;
   out_8148689651805700146[274] = 0;
   out_8148689651805700146[275] = 0;
   out_8148689651805700146[276] = 0;
   out_8148689651805700146[277] = 0;
   out_8148689651805700146[278] = 0;
   out_8148689651805700146[279] = 0;
   out_8148689651805700146[280] = 0;
   out_8148689651805700146[281] = 0;
   out_8148689651805700146[282] = 0;
   out_8148689651805700146[283] = 0;
   out_8148689651805700146[284] = 0;
   out_8148689651805700146[285] = 1.0;
   out_8148689651805700146[286] = 0;
   out_8148689651805700146[287] = 0;
   out_8148689651805700146[288] = 0;
   out_8148689651805700146[289] = 0;
   out_8148689651805700146[290] = 0;
   out_8148689651805700146[291] = 0;
   out_8148689651805700146[292] = 0;
   out_8148689651805700146[293] = 0;
   out_8148689651805700146[294] = 0;
   out_8148689651805700146[295] = 0;
   out_8148689651805700146[296] = 0;
   out_8148689651805700146[297] = 0;
   out_8148689651805700146[298] = 0;
   out_8148689651805700146[299] = 0;
   out_8148689651805700146[300] = 0;
   out_8148689651805700146[301] = 0;
   out_8148689651805700146[302] = 0;
   out_8148689651805700146[303] = 0;
   out_8148689651805700146[304] = 0;
   out_8148689651805700146[305] = 0;
   out_8148689651805700146[306] = 0;
   out_8148689651805700146[307] = 1.0;
   out_8148689651805700146[308] = 0;
   out_8148689651805700146[309] = 0;
   out_8148689651805700146[310] = 0;
   out_8148689651805700146[311] = 0;
   out_8148689651805700146[312] = 0;
   out_8148689651805700146[313] = 0;
   out_8148689651805700146[314] = 0;
   out_8148689651805700146[315] = 0;
   out_8148689651805700146[316] = 0;
   out_8148689651805700146[317] = 0;
   out_8148689651805700146[318] = 0;
   out_8148689651805700146[319] = 0;
   out_8148689651805700146[320] = 0;
   out_8148689651805700146[321] = 0;
   out_8148689651805700146[322] = 0;
   out_8148689651805700146[323] = 0;
   out_8148689651805700146[324] = 0;
   out_8148689651805700146[325] = 0;
   out_8148689651805700146[326] = 0;
   out_8148689651805700146[327] = 0;
   out_8148689651805700146[328] = 0;
   out_8148689651805700146[329] = 1.0;
   out_8148689651805700146[330] = 0;
   out_8148689651805700146[331] = 0;
   out_8148689651805700146[332] = 0;
   out_8148689651805700146[333] = 0;
   out_8148689651805700146[334] = 0;
   out_8148689651805700146[335] = 0;
   out_8148689651805700146[336] = 0;
   out_8148689651805700146[337] = 0;
   out_8148689651805700146[338] = 0;
   out_8148689651805700146[339] = 0;
   out_8148689651805700146[340] = 0;
   out_8148689651805700146[341] = 0;
   out_8148689651805700146[342] = 0;
   out_8148689651805700146[343] = 0;
   out_8148689651805700146[344] = 0;
   out_8148689651805700146[345] = 0;
   out_8148689651805700146[346] = 0;
   out_8148689651805700146[347] = 0;
   out_8148689651805700146[348] = 0;
   out_8148689651805700146[349] = 0;
   out_8148689651805700146[350] = 0;
   out_8148689651805700146[351] = 1.0;
   out_8148689651805700146[352] = 0;
   out_8148689651805700146[353] = 0;
   out_8148689651805700146[354] = 0;
   out_8148689651805700146[355] = 0;
   out_8148689651805700146[356] = 0;
   out_8148689651805700146[357] = 0;
   out_8148689651805700146[358] = 0;
   out_8148689651805700146[359] = 0;
   out_8148689651805700146[360] = 0;
   out_8148689651805700146[361] = 0;
   out_8148689651805700146[362] = 0;
   out_8148689651805700146[363] = 0;
   out_8148689651805700146[364] = 0;
   out_8148689651805700146[365] = 0;
   out_8148689651805700146[366] = 0;
   out_8148689651805700146[367] = 0;
   out_8148689651805700146[368] = 0;
   out_8148689651805700146[369] = 0;
   out_8148689651805700146[370] = 0;
   out_8148689651805700146[371] = 0;
   out_8148689651805700146[372] = 0;
   out_8148689651805700146[373] = 1.0;
   out_8148689651805700146[374] = 0;
   out_8148689651805700146[375] = 0;
   out_8148689651805700146[376] = 0;
   out_8148689651805700146[377] = 0;
   out_8148689651805700146[378] = 0;
   out_8148689651805700146[379] = 0;
   out_8148689651805700146[380] = 0;
   out_8148689651805700146[381] = 0;
   out_8148689651805700146[382] = 0;
   out_8148689651805700146[383] = 0;
   out_8148689651805700146[384] = 0;
   out_8148689651805700146[385] = 0;
   out_8148689651805700146[386] = 0;
   out_8148689651805700146[387] = 0;
   out_8148689651805700146[388] = 0;
   out_8148689651805700146[389] = 0;
   out_8148689651805700146[390] = 0;
   out_8148689651805700146[391] = 0;
   out_8148689651805700146[392] = 0;
   out_8148689651805700146[393] = 0;
   out_8148689651805700146[394] = 0;
   out_8148689651805700146[395] = 1.0;
   out_8148689651805700146[396] = 0;
   out_8148689651805700146[397] = 0;
   out_8148689651805700146[398] = 0;
   out_8148689651805700146[399] = 0;
   out_8148689651805700146[400] = 0;
   out_8148689651805700146[401] = 0;
   out_8148689651805700146[402] = 0;
   out_8148689651805700146[403] = 0;
   out_8148689651805700146[404] = 0;
   out_8148689651805700146[405] = 0;
   out_8148689651805700146[406] = 0;
   out_8148689651805700146[407] = 0;
   out_8148689651805700146[408] = 0;
   out_8148689651805700146[409] = 0;
   out_8148689651805700146[410] = 0;
   out_8148689651805700146[411] = 0;
   out_8148689651805700146[412] = 0;
   out_8148689651805700146[413] = 0;
   out_8148689651805700146[414] = 0;
   out_8148689651805700146[415] = 0;
   out_8148689651805700146[416] = 0;
   out_8148689651805700146[417] = 1.0;
   out_8148689651805700146[418] = 0;
   out_8148689651805700146[419] = 0;
   out_8148689651805700146[420] = 0;
   out_8148689651805700146[421] = 0;
   out_8148689651805700146[422] = 0;
   out_8148689651805700146[423] = 0;
   out_8148689651805700146[424] = 0;
   out_8148689651805700146[425] = 0;
   out_8148689651805700146[426] = 0;
   out_8148689651805700146[427] = 0;
   out_8148689651805700146[428] = 0;
   out_8148689651805700146[429] = 0;
   out_8148689651805700146[430] = 0;
   out_8148689651805700146[431] = 0;
   out_8148689651805700146[432] = 0;
   out_8148689651805700146[433] = 0;
   out_8148689651805700146[434] = 0;
   out_8148689651805700146[435] = 0;
   out_8148689651805700146[436] = 0;
   out_8148689651805700146[437] = 0;
   out_8148689651805700146[438] = 0;
   out_8148689651805700146[439] = 1.0;
   out_8148689651805700146[440] = 0;
   out_8148689651805700146[441] = 0;
   out_8148689651805700146[442] = 0;
   out_8148689651805700146[443] = 0;
   out_8148689651805700146[444] = 0;
   out_8148689651805700146[445] = 0;
   out_8148689651805700146[446] = 0;
   out_8148689651805700146[447] = 0;
   out_8148689651805700146[448] = 0;
   out_8148689651805700146[449] = 0;
   out_8148689651805700146[450] = 0;
   out_8148689651805700146[451] = 0;
   out_8148689651805700146[452] = 0;
   out_8148689651805700146[453] = 0;
   out_8148689651805700146[454] = 0;
   out_8148689651805700146[455] = 0;
   out_8148689651805700146[456] = 0;
   out_8148689651805700146[457] = 0;
   out_8148689651805700146[458] = 0;
   out_8148689651805700146[459] = 0;
   out_8148689651805700146[460] = 0;
   out_8148689651805700146[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_902112657953448943) {
   out_902112657953448943[0] = dt*state[7] + state[0];
   out_902112657953448943[1] = dt*state[8] + state[1];
   out_902112657953448943[2] = dt*state[9] + state[2];
   out_902112657953448943[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_902112657953448943[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_902112657953448943[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_902112657953448943[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_902112657953448943[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_902112657953448943[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_902112657953448943[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_902112657953448943[10] = state[10];
   out_902112657953448943[11] = state[11];
   out_902112657953448943[12] = state[12];
   out_902112657953448943[13] = state[13];
   out_902112657953448943[14] = state[14];
   out_902112657953448943[15] = state[15];
   out_902112657953448943[16] = state[16];
   out_902112657953448943[17] = state[17];
   out_902112657953448943[18] = state[18];
   out_902112657953448943[19] = state[19];
   out_902112657953448943[20] = state[20];
   out_902112657953448943[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8903580631120383034) {
   out_8903580631120383034[0] = 1;
   out_8903580631120383034[1] = 0;
   out_8903580631120383034[2] = 0;
   out_8903580631120383034[3] = 0;
   out_8903580631120383034[4] = 0;
   out_8903580631120383034[5] = 0;
   out_8903580631120383034[6] = dt;
   out_8903580631120383034[7] = 0;
   out_8903580631120383034[8] = 0;
   out_8903580631120383034[9] = 0;
   out_8903580631120383034[10] = 0;
   out_8903580631120383034[11] = 0;
   out_8903580631120383034[12] = 0;
   out_8903580631120383034[13] = 0;
   out_8903580631120383034[14] = 0;
   out_8903580631120383034[15] = 0;
   out_8903580631120383034[16] = 0;
   out_8903580631120383034[17] = 0;
   out_8903580631120383034[18] = 0;
   out_8903580631120383034[19] = 0;
   out_8903580631120383034[20] = 0;
   out_8903580631120383034[21] = 0;
   out_8903580631120383034[22] = 1;
   out_8903580631120383034[23] = 0;
   out_8903580631120383034[24] = 0;
   out_8903580631120383034[25] = 0;
   out_8903580631120383034[26] = 0;
   out_8903580631120383034[27] = 0;
   out_8903580631120383034[28] = dt;
   out_8903580631120383034[29] = 0;
   out_8903580631120383034[30] = 0;
   out_8903580631120383034[31] = 0;
   out_8903580631120383034[32] = 0;
   out_8903580631120383034[33] = 0;
   out_8903580631120383034[34] = 0;
   out_8903580631120383034[35] = 0;
   out_8903580631120383034[36] = 0;
   out_8903580631120383034[37] = 0;
   out_8903580631120383034[38] = 0;
   out_8903580631120383034[39] = 0;
   out_8903580631120383034[40] = 0;
   out_8903580631120383034[41] = 0;
   out_8903580631120383034[42] = 0;
   out_8903580631120383034[43] = 0;
   out_8903580631120383034[44] = 1;
   out_8903580631120383034[45] = 0;
   out_8903580631120383034[46] = 0;
   out_8903580631120383034[47] = 0;
   out_8903580631120383034[48] = 0;
   out_8903580631120383034[49] = 0;
   out_8903580631120383034[50] = dt;
   out_8903580631120383034[51] = 0;
   out_8903580631120383034[52] = 0;
   out_8903580631120383034[53] = 0;
   out_8903580631120383034[54] = 0;
   out_8903580631120383034[55] = 0;
   out_8903580631120383034[56] = 0;
   out_8903580631120383034[57] = 0;
   out_8903580631120383034[58] = 0;
   out_8903580631120383034[59] = 0;
   out_8903580631120383034[60] = 0;
   out_8903580631120383034[61] = 0;
   out_8903580631120383034[62] = 0;
   out_8903580631120383034[63] = 0;
   out_8903580631120383034[64] = 0;
   out_8903580631120383034[65] = 0;
   out_8903580631120383034[66] = 1;
   out_8903580631120383034[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8903580631120383034[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8903580631120383034[69] = 0;
   out_8903580631120383034[70] = 0;
   out_8903580631120383034[71] = 0;
   out_8903580631120383034[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8903580631120383034[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8903580631120383034[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8903580631120383034[75] = 0;
   out_8903580631120383034[76] = 0;
   out_8903580631120383034[77] = 0;
   out_8903580631120383034[78] = 0;
   out_8903580631120383034[79] = 0;
   out_8903580631120383034[80] = 0;
   out_8903580631120383034[81] = 0;
   out_8903580631120383034[82] = 0;
   out_8903580631120383034[83] = 0;
   out_8903580631120383034[84] = 0;
   out_8903580631120383034[85] = 0;
   out_8903580631120383034[86] = 0;
   out_8903580631120383034[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8903580631120383034[88] = 1;
   out_8903580631120383034[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8903580631120383034[90] = 0;
   out_8903580631120383034[91] = 0;
   out_8903580631120383034[92] = 0;
   out_8903580631120383034[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8903580631120383034[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8903580631120383034[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8903580631120383034[96] = 0;
   out_8903580631120383034[97] = 0;
   out_8903580631120383034[98] = 0;
   out_8903580631120383034[99] = 0;
   out_8903580631120383034[100] = 0;
   out_8903580631120383034[101] = 0;
   out_8903580631120383034[102] = 0;
   out_8903580631120383034[103] = 0;
   out_8903580631120383034[104] = 0;
   out_8903580631120383034[105] = 0;
   out_8903580631120383034[106] = 0;
   out_8903580631120383034[107] = 0;
   out_8903580631120383034[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8903580631120383034[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8903580631120383034[110] = 1;
   out_8903580631120383034[111] = 0;
   out_8903580631120383034[112] = 0;
   out_8903580631120383034[113] = 0;
   out_8903580631120383034[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8903580631120383034[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8903580631120383034[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8903580631120383034[117] = 0;
   out_8903580631120383034[118] = 0;
   out_8903580631120383034[119] = 0;
   out_8903580631120383034[120] = 0;
   out_8903580631120383034[121] = 0;
   out_8903580631120383034[122] = 0;
   out_8903580631120383034[123] = 0;
   out_8903580631120383034[124] = 0;
   out_8903580631120383034[125] = 0;
   out_8903580631120383034[126] = 0;
   out_8903580631120383034[127] = 0;
   out_8903580631120383034[128] = 0;
   out_8903580631120383034[129] = 0;
   out_8903580631120383034[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8903580631120383034[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8903580631120383034[132] = 1;
   out_8903580631120383034[133] = 0;
   out_8903580631120383034[134] = 0;
   out_8903580631120383034[135] = 0;
   out_8903580631120383034[136] = 0;
   out_8903580631120383034[137] = 0;
   out_8903580631120383034[138] = 0;
   out_8903580631120383034[139] = 0;
   out_8903580631120383034[140] = 0;
   out_8903580631120383034[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8903580631120383034[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8903580631120383034[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8903580631120383034[144] = 0;
   out_8903580631120383034[145] = 0;
   out_8903580631120383034[146] = 0;
   out_8903580631120383034[147] = 0;
   out_8903580631120383034[148] = 0;
   out_8903580631120383034[149] = 0;
   out_8903580631120383034[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8903580631120383034[151] = 0;
   out_8903580631120383034[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8903580631120383034[153] = 0;
   out_8903580631120383034[154] = 1;
   out_8903580631120383034[155] = 0;
   out_8903580631120383034[156] = 0;
   out_8903580631120383034[157] = 0;
   out_8903580631120383034[158] = 0;
   out_8903580631120383034[159] = 0;
   out_8903580631120383034[160] = 0;
   out_8903580631120383034[161] = 0;
   out_8903580631120383034[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8903580631120383034[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8903580631120383034[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8903580631120383034[165] = 0;
   out_8903580631120383034[166] = 0;
   out_8903580631120383034[167] = 0;
   out_8903580631120383034[168] = 0;
   out_8903580631120383034[169] = 0;
   out_8903580631120383034[170] = 0;
   out_8903580631120383034[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8903580631120383034[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8903580631120383034[173] = 0;
   out_8903580631120383034[174] = 0;
   out_8903580631120383034[175] = 0;
   out_8903580631120383034[176] = 1;
   out_8903580631120383034[177] = 0;
   out_8903580631120383034[178] = 0;
   out_8903580631120383034[179] = 0;
   out_8903580631120383034[180] = 0;
   out_8903580631120383034[181] = 0;
   out_8903580631120383034[182] = 0;
   out_8903580631120383034[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8903580631120383034[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8903580631120383034[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8903580631120383034[186] = 0;
   out_8903580631120383034[187] = 0;
   out_8903580631120383034[188] = 0;
   out_8903580631120383034[189] = 0;
   out_8903580631120383034[190] = 0;
   out_8903580631120383034[191] = 0;
   out_8903580631120383034[192] = 0;
   out_8903580631120383034[193] = 0;
   out_8903580631120383034[194] = 0;
   out_8903580631120383034[195] = 0;
   out_8903580631120383034[196] = 0;
   out_8903580631120383034[197] = 0;
   out_8903580631120383034[198] = 1;
   out_8903580631120383034[199] = 0;
   out_8903580631120383034[200] = 0;
   out_8903580631120383034[201] = 0;
   out_8903580631120383034[202] = 0;
   out_8903580631120383034[203] = 0;
   out_8903580631120383034[204] = 0;
   out_8903580631120383034[205] = 0;
   out_8903580631120383034[206] = 0;
   out_8903580631120383034[207] = 0;
   out_8903580631120383034[208] = 0;
   out_8903580631120383034[209] = 0;
   out_8903580631120383034[210] = 0;
   out_8903580631120383034[211] = 0;
   out_8903580631120383034[212] = 0;
   out_8903580631120383034[213] = 0;
   out_8903580631120383034[214] = 0;
   out_8903580631120383034[215] = 0;
   out_8903580631120383034[216] = 0;
   out_8903580631120383034[217] = 0;
   out_8903580631120383034[218] = 0;
   out_8903580631120383034[219] = 0;
   out_8903580631120383034[220] = 1;
   out_8903580631120383034[221] = 0;
   out_8903580631120383034[222] = 0;
   out_8903580631120383034[223] = 0;
   out_8903580631120383034[224] = 0;
   out_8903580631120383034[225] = 0;
   out_8903580631120383034[226] = 0;
   out_8903580631120383034[227] = 0;
   out_8903580631120383034[228] = 0;
   out_8903580631120383034[229] = 0;
   out_8903580631120383034[230] = 0;
   out_8903580631120383034[231] = 0;
   out_8903580631120383034[232] = 0;
   out_8903580631120383034[233] = 0;
   out_8903580631120383034[234] = 0;
   out_8903580631120383034[235] = 0;
   out_8903580631120383034[236] = 0;
   out_8903580631120383034[237] = 0;
   out_8903580631120383034[238] = 0;
   out_8903580631120383034[239] = 0;
   out_8903580631120383034[240] = 0;
   out_8903580631120383034[241] = 0;
   out_8903580631120383034[242] = 1;
   out_8903580631120383034[243] = 0;
   out_8903580631120383034[244] = 0;
   out_8903580631120383034[245] = 0;
   out_8903580631120383034[246] = 0;
   out_8903580631120383034[247] = 0;
   out_8903580631120383034[248] = 0;
   out_8903580631120383034[249] = 0;
   out_8903580631120383034[250] = 0;
   out_8903580631120383034[251] = 0;
   out_8903580631120383034[252] = 0;
   out_8903580631120383034[253] = 0;
   out_8903580631120383034[254] = 0;
   out_8903580631120383034[255] = 0;
   out_8903580631120383034[256] = 0;
   out_8903580631120383034[257] = 0;
   out_8903580631120383034[258] = 0;
   out_8903580631120383034[259] = 0;
   out_8903580631120383034[260] = 0;
   out_8903580631120383034[261] = 0;
   out_8903580631120383034[262] = 0;
   out_8903580631120383034[263] = 0;
   out_8903580631120383034[264] = 1;
   out_8903580631120383034[265] = 0;
   out_8903580631120383034[266] = 0;
   out_8903580631120383034[267] = 0;
   out_8903580631120383034[268] = 0;
   out_8903580631120383034[269] = 0;
   out_8903580631120383034[270] = 0;
   out_8903580631120383034[271] = 0;
   out_8903580631120383034[272] = 0;
   out_8903580631120383034[273] = 0;
   out_8903580631120383034[274] = 0;
   out_8903580631120383034[275] = 0;
   out_8903580631120383034[276] = 0;
   out_8903580631120383034[277] = 0;
   out_8903580631120383034[278] = 0;
   out_8903580631120383034[279] = 0;
   out_8903580631120383034[280] = 0;
   out_8903580631120383034[281] = 0;
   out_8903580631120383034[282] = 0;
   out_8903580631120383034[283] = 0;
   out_8903580631120383034[284] = 0;
   out_8903580631120383034[285] = 0;
   out_8903580631120383034[286] = 1;
   out_8903580631120383034[287] = 0;
   out_8903580631120383034[288] = 0;
   out_8903580631120383034[289] = 0;
   out_8903580631120383034[290] = 0;
   out_8903580631120383034[291] = 0;
   out_8903580631120383034[292] = 0;
   out_8903580631120383034[293] = 0;
   out_8903580631120383034[294] = 0;
   out_8903580631120383034[295] = 0;
   out_8903580631120383034[296] = 0;
   out_8903580631120383034[297] = 0;
   out_8903580631120383034[298] = 0;
   out_8903580631120383034[299] = 0;
   out_8903580631120383034[300] = 0;
   out_8903580631120383034[301] = 0;
   out_8903580631120383034[302] = 0;
   out_8903580631120383034[303] = 0;
   out_8903580631120383034[304] = 0;
   out_8903580631120383034[305] = 0;
   out_8903580631120383034[306] = 0;
   out_8903580631120383034[307] = 0;
   out_8903580631120383034[308] = 1;
   out_8903580631120383034[309] = 0;
   out_8903580631120383034[310] = 0;
   out_8903580631120383034[311] = 0;
   out_8903580631120383034[312] = 0;
   out_8903580631120383034[313] = 0;
   out_8903580631120383034[314] = 0;
   out_8903580631120383034[315] = 0;
   out_8903580631120383034[316] = 0;
   out_8903580631120383034[317] = 0;
   out_8903580631120383034[318] = 0;
   out_8903580631120383034[319] = 0;
   out_8903580631120383034[320] = 0;
   out_8903580631120383034[321] = 0;
   out_8903580631120383034[322] = 0;
   out_8903580631120383034[323] = 0;
   out_8903580631120383034[324] = 0;
   out_8903580631120383034[325] = 0;
   out_8903580631120383034[326] = 0;
   out_8903580631120383034[327] = 0;
   out_8903580631120383034[328] = 0;
   out_8903580631120383034[329] = 0;
   out_8903580631120383034[330] = 1;
   out_8903580631120383034[331] = 0;
   out_8903580631120383034[332] = 0;
   out_8903580631120383034[333] = 0;
   out_8903580631120383034[334] = 0;
   out_8903580631120383034[335] = 0;
   out_8903580631120383034[336] = 0;
   out_8903580631120383034[337] = 0;
   out_8903580631120383034[338] = 0;
   out_8903580631120383034[339] = 0;
   out_8903580631120383034[340] = 0;
   out_8903580631120383034[341] = 0;
   out_8903580631120383034[342] = 0;
   out_8903580631120383034[343] = 0;
   out_8903580631120383034[344] = 0;
   out_8903580631120383034[345] = 0;
   out_8903580631120383034[346] = 0;
   out_8903580631120383034[347] = 0;
   out_8903580631120383034[348] = 0;
   out_8903580631120383034[349] = 0;
   out_8903580631120383034[350] = 0;
   out_8903580631120383034[351] = 0;
   out_8903580631120383034[352] = 1;
   out_8903580631120383034[353] = 0;
   out_8903580631120383034[354] = 0;
   out_8903580631120383034[355] = 0;
   out_8903580631120383034[356] = 0;
   out_8903580631120383034[357] = 0;
   out_8903580631120383034[358] = 0;
   out_8903580631120383034[359] = 0;
   out_8903580631120383034[360] = 0;
   out_8903580631120383034[361] = 0;
   out_8903580631120383034[362] = 0;
   out_8903580631120383034[363] = 0;
   out_8903580631120383034[364] = 0;
   out_8903580631120383034[365] = 0;
   out_8903580631120383034[366] = 0;
   out_8903580631120383034[367] = 0;
   out_8903580631120383034[368] = 0;
   out_8903580631120383034[369] = 0;
   out_8903580631120383034[370] = 0;
   out_8903580631120383034[371] = 0;
   out_8903580631120383034[372] = 0;
   out_8903580631120383034[373] = 0;
   out_8903580631120383034[374] = 1;
   out_8903580631120383034[375] = 0;
   out_8903580631120383034[376] = 0;
   out_8903580631120383034[377] = 0;
   out_8903580631120383034[378] = 0;
   out_8903580631120383034[379] = 0;
   out_8903580631120383034[380] = 0;
   out_8903580631120383034[381] = 0;
   out_8903580631120383034[382] = 0;
   out_8903580631120383034[383] = 0;
   out_8903580631120383034[384] = 0;
   out_8903580631120383034[385] = 0;
   out_8903580631120383034[386] = 0;
   out_8903580631120383034[387] = 0;
   out_8903580631120383034[388] = 0;
   out_8903580631120383034[389] = 0;
   out_8903580631120383034[390] = 0;
   out_8903580631120383034[391] = 0;
   out_8903580631120383034[392] = 0;
   out_8903580631120383034[393] = 0;
   out_8903580631120383034[394] = 0;
   out_8903580631120383034[395] = 0;
   out_8903580631120383034[396] = 1;
   out_8903580631120383034[397] = 0;
   out_8903580631120383034[398] = 0;
   out_8903580631120383034[399] = 0;
   out_8903580631120383034[400] = 0;
   out_8903580631120383034[401] = 0;
   out_8903580631120383034[402] = 0;
   out_8903580631120383034[403] = 0;
   out_8903580631120383034[404] = 0;
   out_8903580631120383034[405] = 0;
   out_8903580631120383034[406] = 0;
   out_8903580631120383034[407] = 0;
   out_8903580631120383034[408] = 0;
   out_8903580631120383034[409] = 0;
   out_8903580631120383034[410] = 0;
   out_8903580631120383034[411] = 0;
   out_8903580631120383034[412] = 0;
   out_8903580631120383034[413] = 0;
   out_8903580631120383034[414] = 0;
   out_8903580631120383034[415] = 0;
   out_8903580631120383034[416] = 0;
   out_8903580631120383034[417] = 0;
   out_8903580631120383034[418] = 1;
   out_8903580631120383034[419] = 0;
   out_8903580631120383034[420] = 0;
   out_8903580631120383034[421] = 0;
   out_8903580631120383034[422] = 0;
   out_8903580631120383034[423] = 0;
   out_8903580631120383034[424] = 0;
   out_8903580631120383034[425] = 0;
   out_8903580631120383034[426] = 0;
   out_8903580631120383034[427] = 0;
   out_8903580631120383034[428] = 0;
   out_8903580631120383034[429] = 0;
   out_8903580631120383034[430] = 0;
   out_8903580631120383034[431] = 0;
   out_8903580631120383034[432] = 0;
   out_8903580631120383034[433] = 0;
   out_8903580631120383034[434] = 0;
   out_8903580631120383034[435] = 0;
   out_8903580631120383034[436] = 0;
   out_8903580631120383034[437] = 0;
   out_8903580631120383034[438] = 0;
   out_8903580631120383034[439] = 0;
   out_8903580631120383034[440] = 1;
}
void h_4(double *state, double *unused, double *out_7028545921639587217) {
   out_7028545921639587217[0] = state[10] + state[13];
   out_7028545921639587217[1] = state[11] + state[14];
   out_7028545921639587217[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4535428380652713976) {
   out_4535428380652713976[0] = 0;
   out_4535428380652713976[1] = 0;
   out_4535428380652713976[2] = 0;
   out_4535428380652713976[3] = 0;
   out_4535428380652713976[4] = 0;
   out_4535428380652713976[5] = 0;
   out_4535428380652713976[6] = 0;
   out_4535428380652713976[7] = 0;
   out_4535428380652713976[8] = 0;
   out_4535428380652713976[9] = 0;
   out_4535428380652713976[10] = 1;
   out_4535428380652713976[11] = 0;
   out_4535428380652713976[12] = 0;
   out_4535428380652713976[13] = 1;
   out_4535428380652713976[14] = 0;
   out_4535428380652713976[15] = 0;
   out_4535428380652713976[16] = 0;
   out_4535428380652713976[17] = 0;
   out_4535428380652713976[18] = 0;
   out_4535428380652713976[19] = 0;
   out_4535428380652713976[20] = 0;
   out_4535428380652713976[21] = 0;
   out_4535428380652713976[22] = 0;
   out_4535428380652713976[23] = 0;
   out_4535428380652713976[24] = 0;
   out_4535428380652713976[25] = 0;
   out_4535428380652713976[26] = 0;
   out_4535428380652713976[27] = 0;
   out_4535428380652713976[28] = 0;
   out_4535428380652713976[29] = 0;
   out_4535428380652713976[30] = 0;
   out_4535428380652713976[31] = 0;
   out_4535428380652713976[32] = 0;
   out_4535428380652713976[33] = 1;
   out_4535428380652713976[34] = 0;
   out_4535428380652713976[35] = 0;
   out_4535428380652713976[36] = 1;
   out_4535428380652713976[37] = 0;
   out_4535428380652713976[38] = 0;
   out_4535428380652713976[39] = 0;
   out_4535428380652713976[40] = 0;
   out_4535428380652713976[41] = 0;
   out_4535428380652713976[42] = 0;
   out_4535428380652713976[43] = 0;
   out_4535428380652713976[44] = 0;
   out_4535428380652713976[45] = 0;
   out_4535428380652713976[46] = 0;
   out_4535428380652713976[47] = 0;
   out_4535428380652713976[48] = 0;
   out_4535428380652713976[49] = 0;
   out_4535428380652713976[50] = 0;
   out_4535428380652713976[51] = 0;
   out_4535428380652713976[52] = 0;
   out_4535428380652713976[53] = 0;
   out_4535428380652713976[54] = 0;
   out_4535428380652713976[55] = 0;
   out_4535428380652713976[56] = 1;
   out_4535428380652713976[57] = 0;
   out_4535428380652713976[58] = 0;
   out_4535428380652713976[59] = 1;
   out_4535428380652713976[60] = 0;
   out_4535428380652713976[61] = 0;
   out_4535428380652713976[62] = 0;
   out_4535428380652713976[63] = 0;
   out_4535428380652713976[64] = 0;
   out_4535428380652713976[65] = 0;
}
void h_9(double *state, double *unused, double *out_302101887128481646) {
   out_302101887128481646[0] = state[10];
   out_302101887128481646[1] = state[11];
   out_302101887128481646[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2751790554611733494) {
   out_2751790554611733494[0] = 0;
   out_2751790554611733494[1] = 0;
   out_2751790554611733494[2] = 0;
   out_2751790554611733494[3] = 0;
   out_2751790554611733494[4] = 0;
   out_2751790554611733494[5] = 0;
   out_2751790554611733494[6] = 0;
   out_2751790554611733494[7] = 0;
   out_2751790554611733494[8] = 0;
   out_2751790554611733494[9] = 0;
   out_2751790554611733494[10] = 1;
   out_2751790554611733494[11] = 0;
   out_2751790554611733494[12] = 0;
   out_2751790554611733494[13] = 0;
   out_2751790554611733494[14] = 0;
   out_2751790554611733494[15] = 0;
   out_2751790554611733494[16] = 0;
   out_2751790554611733494[17] = 0;
   out_2751790554611733494[18] = 0;
   out_2751790554611733494[19] = 0;
   out_2751790554611733494[20] = 0;
   out_2751790554611733494[21] = 0;
   out_2751790554611733494[22] = 0;
   out_2751790554611733494[23] = 0;
   out_2751790554611733494[24] = 0;
   out_2751790554611733494[25] = 0;
   out_2751790554611733494[26] = 0;
   out_2751790554611733494[27] = 0;
   out_2751790554611733494[28] = 0;
   out_2751790554611733494[29] = 0;
   out_2751790554611733494[30] = 0;
   out_2751790554611733494[31] = 0;
   out_2751790554611733494[32] = 0;
   out_2751790554611733494[33] = 1;
   out_2751790554611733494[34] = 0;
   out_2751790554611733494[35] = 0;
   out_2751790554611733494[36] = 0;
   out_2751790554611733494[37] = 0;
   out_2751790554611733494[38] = 0;
   out_2751790554611733494[39] = 0;
   out_2751790554611733494[40] = 0;
   out_2751790554611733494[41] = 0;
   out_2751790554611733494[42] = 0;
   out_2751790554611733494[43] = 0;
   out_2751790554611733494[44] = 0;
   out_2751790554611733494[45] = 0;
   out_2751790554611733494[46] = 0;
   out_2751790554611733494[47] = 0;
   out_2751790554611733494[48] = 0;
   out_2751790554611733494[49] = 0;
   out_2751790554611733494[50] = 0;
   out_2751790554611733494[51] = 0;
   out_2751790554611733494[52] = 0;
   out_2751790554611733494[53] = 0;
   out_2751790554611733494[54] = 0;
   out_2751790554611733494[55] = 0;
   out_2751790554611733494[56] = 1;
   out_2751790554611733494[57] = 0;
   out_2751790554611733494[58] = 0;
   out_2751790554611733494[59] = 0;
   out_2751790554611733494[60] = 0;
   out_2751790554611733494[61] = 0;
   out_2751790554611733494[62] = 0;
   out_2751790554611733494[63] = 0;
   out_2751790554611733494[64] = 0;
   out_2751790554611733494[65] = 0;
}
void h_10(double *state, double *unused, double *out_7103874480815483869) {
   out_7103874480815483869[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7103874480815483869[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7103874480815483869[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_79742523300234424) {
   out_79742523300234424[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_79742523300234424[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_79742523300234424[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_79742523300234424[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_79742523300234424[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_79742523300234424[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_79742523300234424[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_79742523300234424[7] = 0;
   out_79742523300234424[8] = 0;
   out_79742523300234424[9] = 0;
   out_79742523300234424[10] = 0;
   out_79742523300234424[11] = 0;
   out_79742523300234424[12] = 0;
   out_79742523300234424[13] = 0;
   out_79742523300234424[14] = 0;
   out_79742523300234424[15] = 0;
   out_79742523300234424[16] = 1;
   out_79742523300234424[17] = 0;
   out_79742523300234424[18] = 0;
   out_79742523300234424[19] = 1;
   out_79742523300234424[20] = 0;
   out_79742523300234424[21] = 0;
   out_79742523300234424[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_79742523300234424[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_79742523300234424[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_79742523300234424[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_79742523300234424[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_79742523300234424[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_79742523300234424[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_79742523300234424[29] = 0;
   out_79742523300234424[30] = 0;
   out_79742523300234424[31] = 0;
   out_79742523300234424[32] = 0;
   out_79742523300234424[33] = 0;
   out_79742523300234424[34] = 0;
   out_79742523300234424[35] = 0;
   out_79742523300234424[36] = 0;
   out_79742523300234424[37] = 0;
   out_79742523300234424[38] = 0;
   out_79742523300234424[39] = 1;
   out_79742523300234424[40] = 0;
   out_79742523300234424[41] = 0;
   out_79742523300234424[42] = 1;
   out_79742523300234424[43] = 0;
   out_79742523300234424[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_79742523300234424[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_79742523300234424[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_79742523300234424[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_79742523300234424[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_79742523300234424[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_79742523300234424[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_79742523300234424[51] = 0;
   out_79742523300234424[52] = 0;
   out_79742523300234424[53] = 0;
   out_79742523300234424[54] = 0;
   out_79742523300234424[55] = 0;
   out_79742523300234424[56] = 0;
   out_79742523300234424[57] = 0;
   out_79742523300234424[58] = 0;
   out_79742523300234424[59] = 0;
   out_79742523300234424[60] = 0;
   out_79742523300234424[61] = 0;
   out_79742523300234424[62] = 1;
   out_79742523300234424[63] = 0;
   out_79742523300234424[64] = 0;
   out_79742523300234424[65] = 1;
}
void h_12(double *state, double *unused, double *out_4435864690509638899) {
   out_4435864690509638899[0] = state[0];
   out_4435864690509638899[1] = state[1];
   out_4435864690509638899[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7530057316014104644) {
   out_7530057316014104644[0] = 1;
   out_7530057316014104644[1] = 0;
   out_7530057316014104644[2] = 0;
   out_7530057316014104644[3] = 0;
   out_7530057316014104644[4] = 0;
   out_7530057316014104644[5] = 0;
   out_7530057316014104644[6] = 0;
   out_7530057316014104644[7] = 0;
   out_7530057316014104644[8] = 0;
   out_7530057316014104644[9] = 0;
   out_7530057316014104644[10] = 0;
   out_7530057316014104644[11] = 0;
   out_7530057316014104644[12] = 0;
   out_7530057316014104644[13] = 0;
   out_7530057316014104644[14] = 0;
   out_7530057316014104644[15] = 0;
   out_7530057316014104644[16] = 0;
   out_7530057316014104644[17] = 0;
   out_7530057316014104644[18] = 0;
   out_7530057316014104644[19] = 0;
   out_7530057316014104644[20] = 0;
   out_7530057316014104644[21] = 0;
   out_7530057316014104644[22] = 0;
   out_7530057316014104644[23] = 1;
   out_7530057316014104644[24] = 0;
   out_7530057316014104644[25] = 0;
   out_7530057316014104644[26] = 0;
   out_7530057316014104644[27] = 0;
   out_7530057316014104644[28] = 0;
   out_7530057316014104644[29] = 0;
   out_7530057316014104644[30] = 0;
   out_7530057316014104644[31] = 0;
   out_7530057316014104644[32] = 0;
   out_7530057316014104644[33] = 0;
   out_7530057316014104644[34] = 0;
   out_7530057316014104644[35] = 0;
   out_7530057316014104644[36] = 0;
   out_7530057316014104644[37] = 0;
   out_7530057316014104644[38] = 0;
   out_7530057316014104644[39] = 0;
   out_7530057316014104644[40] = 0;
   out_7530057316014104644[41] = 0;
   out_7530057316014104644[42] = 0;
   out_7530057316014104644[43] = 0;
   out_7530057316014104644[44] = 0;
   out_7530057316014104644[45] = 0;
   out_7530057316014104644[46] = 1;
   out_7530057316014104644[47] = 0;
   out_7530057316014104644[48] = 0;
   out_7530057316014104644[49] = 0;
   out_7530057316014104644[50] = 0;
   out_7530057316014104644[51] = 0;
   out_7530057316014104644[52] = 0;
   out_7530057316014104644[53] = 0;
   out_7530057316014104644[54] = 0;
   out_7530057316014104644[55] = 0;
   out_7530057316014104644[56] = 0;
   out_7530057316014104644[57] = 0;
   out_7530057316014104644[58] = 0;
   out_7530057316014104644[59] = 0;
   out_7530057316014104644[60] = 0;
   out_7530057316014104644[61] = 0;
   out_7530057316014104644[62] = 0;
   out_7530057316014104644[63] = 0;
   out_7530057316014104644[64] = 0;
   out_7530057316014104644[65] = 0;
}
void h_35(double *state, double *unused, double *out_2551716309463514366) {
   out_2551716309463514366[0] = state[7];
   out_2551716309463514366[1] = state[8];
   out_2551716309463514366[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8171123725370433263) {
   out_8171123725370433263[0] = 0;
   out_8171123725370433263[1] = 0;
   out_8171123725370433263[2] = 0;
   out_8171123725370433263[3] = 0;
   out_8171123725370433263[4] = 0;
   out_8171123725370433263[5] = 0;
   out_8171123725370433263[6] = 0;
   out_8171123725370433263[7] = 1;
   out_8171123725370433263[8] = 0;
   out_8171123725370433263[9] = 0;
   out_8171123725370433263[10] = 0;
   out_8171123725370433263[11] = 0;
   out_8171123725370433263[12] = 0;
   out_8171123725370433263[13] = 0;
   out_8171123725370433263[14] = 0;
   out_8171123725370433263[15] = 0;
   out_8171123725370433263[16] = 0;
   out_8171123725370433263[17] = 0;
   out_8171123725370433263[18] = 0;
   out_8171123725370433263[19] = 0;
   out_8171123725370433263[20] = 0;
   out_8171123725370433263[21] = 0;
   out_8171123725370433263[22] = 0;
   out_8171123725370433263[23] = 0;
   out_8171123725370433263[24] = 0;
   out_8171123725370433263[25] = 0;
   out_8171123725370433263[26] = 0;
   out_8171123725370433263[27] = 0;
   out_8171123725370433263[28] = 0;
   out_8171123725370433263[29] = 0;
   out_8171123725370433263[30] = 1;
   out_8171123725370433263[31] = 0;
   out_8171123725370433263[32] = 0;
   out_8171123725370433263[33] = 0;
   out_8171123725370433263[34] = 0;
   out_8171123725370433263[35] = 0;
   out_8171123725370433263[36] = 0;
   out_8171123725370433263[37] = 0;
   out_8171123725370433263[38] = 0;
   out_8171123725370433263[39] = 0;
   out_8171123725370433263[40] = 0;
   out_8171123725370433263[41] = 0;
   out_8171123725370433263[42] = 0;
   out_8171123725370433263[43] = 0;
   out_8171123725370433263[44] = 0;
   out_8171123725370433263[45] = 0;
   out_8171123725370433263[46] = 0;
   out_8171123725370433263[47] = 0;
   out_8171123725370433263[48] = 0;
   out_8171123725370433263[49] = 0;
   out_8171123725370433263[50] = 0;
   out_8171123725370433263[51] = 0;
   out_8171123725370433263[52] = 0;
   out_8171123725370433263[53] = 1;
   out_8171123725370433263[54] = 0;
   out_8171123725370433263[55] = 0;
   out_8171123725370433263[56] = 0;
   out_8171123725370433263[57] = 0;
   out_8171123725370433263[58] = 0;
   out_8171123725370433263[59] = 0;
   out_8171123725370433263[60] = 0;
   out_8171123725370433263[61] = 0;
   out_8171123725370433263[62] = 0;
   out_8171123725370433263[63] = 0;
   out_8171123725370433263[64] = 0;
   out_8171123725370433263[65] = 0;
}
void h_32(double *state, double *unused, double *out_8595242243604104642) {
   out_8595242243604104642[0] = state[3];
   out_8595242243604104642[1] = state[4];
   out_8595242243604104642[2] = state[5];
   out_8595242243604104642[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2369819353162820705) {
   out_2369819353162820705[0] = 0;
   out_2369819353162820705[1] = 0;
   out_2369819353162820705[2] = 0;
   out_2369819353162820705[3] = 1;
   out_2369819353162820705[4] = 0;
   out_2369819353162820705[5] = 0;
   out_2369819353162820705[6] = 0;
   out_2369819353162820705[7] = 0;
   out_2369819353162820705[8] = 0;
   out_2369819353162820705[9] = 0;
   out_2369819353162820705[10] = 0;
   out_2369819353162820705[11] = 0;
   out_2369819353162820705[12] = 0;
   out_2369819353162820705[13] = 0;
   out_2369819353162820705[14] = 0;
   out_2369819353162820705[15] = 0;
   out_2369819353162820705[16] = 0;
   out_2369819353162820705[17] = 0;
   out_2369819353162820705[18] = 0;
   out_2369819353162820705[19] = 0;
   out_2369819353162820705[20] = 0;
   out_2369819353162820705[21] = 0;
   out_2369819353162820705[22] = 0;
   out_2369819353162820705[23] = 0;
   out_2369819353162820705[24] = 0;
   out_2369819353162820705[25] = 0;
   out_2369819353162820705[26] = 1;
   out_2369819353162820705[27] = 0;
   out_2369819353162820705[28] = 0;
   out_2369819353162820705[29] = 0;
   out_2369819353162820705[30] = 0;
   out_2369819353162820705[31] = 0;
   out_2369819353162820705[32] = 0;
   out_2369819353162820705[33] = 0;
   out_2369819353162820705[34] = 0;
   out_2369819353162820705[35] = 0;
   out_2369819353162820705[36] = 0;
   out_2369819353162820705[37] = 0;
   out_2369819353162820705[38] = 0;
   out_2369819353162820705[39] = 0;
   out_2369819353162820705[40] = 0;
   out_2369819353162820705[41] = 0;
   out_2369819353162820705[42] = 0;
   out_2369819353162820705[43] = 0;
   out_2369819353162820705[44] = 0;
   out_2369819353162820705[45] = 0;
   out_2369819353162820705[46] = 0;
   out_2369819353162820705[47] = 0;
   out_2369819353162820705[48] = 0;
   out_2369819353162820705[49] = 1;
   out_2369819353162820705[50] = 0;
   out_2369819353162820705[51] = 0;
   out_2369819353162820705[52] = 0;
   out_2369819353162820705[53] = 0;
   out_2369819353162820705[54] = 0;
   out_2369819353162820705[55] = 0;
   out_2369819353162820705[56] = 0;
   out_2369819353162820705[57] = 0;
   out_2369819353162820705[58] = 0;
   out_2369819353162820705[59] = 0;
   out_2369819353162820705[60] = 0;
   out_2369819353162820705[61] = 0;
   out_2369819353162820705[62] = 0;
   out_2369819353162820705[63] = 0;
   out_2369819353162820705[64] = 0;
   out_2369819353162820705[65] = 0;
   out_2369819353162820705[66] = 0;
   out_2369819353162820705[67] = 0;
   out_2369819353162820705[68] = 0;
   out_2369819353162820705[69] = 0;
   out_2369819353162820705[70] = 0;
   out_2369819353162820705[71] = 0;
   out_2369819353162820705[72] = 1;
   out_2369819353162820705[73] = 0;
   out_2369819353162820705[74] = 0;
   out_2369819353162820705[75] = 0;
   out_2369819353162820705[76] = 0;
   out_2369819353162820705[77] = 0;
   out_2369819353162820705[78] = 0;
   out_2369819353162820705[79] = 0;
   out_2369819353162820705[80] = 0;
   out_2369819353162820705[81] = 0;
   out_2369819353162820705[82] = 0;
   out_2369819353162820705[83] = 0;
   out_2369819353162820705[84] = 0;
   out_2369819353162820705[85] = 0;
   out_2369819353162820705[86] = 0;
   out_2369819353162820705[87] = 0;
}
void h_13(double *state, double *unused, double *out_1530891615425827232) {
   out_1530891615425827232[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1530891615425827232[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1530891615425827232[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_986548921908989728) {
   out_986548921908989728[0] = 0;
   out_986548921908989728[1] = 0;
   out_986548921908989728[2] = 0;
   out_986548921908989728[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_986548921908989728[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_986548921908989728[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_986548921908989728[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_986548921908989728[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_986548921908989728[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_986548921908989728[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_986548921908989728[10] = 0;
   out_986548921908989728[11] = 0;
   out_986548921908989728[12] = 0;
   out_986548921908989728[13] = 0;
   out_986548921908989728[14] = 0;
   out_986548921908989728[15] = 0;
   out_986548921908989728[16] = 0;
   out_986548921908989728[17] = 0;
   out_986548921908989728[18] = 0;
   out_986548921908989728[19] = 0;
   out_986548921908989728[20] = 0;
   out_986548921908989728[21] = 0;
   out_986548921908989728[22] = 0;
   out_986548921908989728[23] = 0;
   out_986548921908989728[24] = 0;
   out_986548921908989728[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_986548921908989728[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_986548921908989728[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_986548921908989728[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_986548921908989728[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_986548921908989728[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_986548921908989728[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_986548921908989728[32] = 0;
   out_986548921908989728[33] = 0;
   out_986548921908989728[34] = 0;
   out_986548921908989728[35] = 0;
   out_986548921908989728[36] = 0;
   out_986548921908989728[37] = 0;
   out_986548921908989728[38] = 0;
   out_986548921908989728[39] = 0;
   out_986548921908989728[40] = 0;
   out_986548921908989728[41] = 0;
   out_986548921908989728[42] = 0;
   out_986548921908989728[43] = 0;
   out_986548921908989728[44] = 0;
   out_986548921908989728[45] = 0;
   out_986548921908989728[46] = 0;
   out_986548921908989728[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_986548921908989728[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_986548921908989728[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_986548921908989728[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_986548921908989728[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_986548921908989728[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_986548921908989728[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_986548921908989728[54] = 0;
   out_986548921908989728[55] = 0;
   out_986548921908989728[56] = 0;
   out_986548921908989728[57] = 0;
   out_986548921908989728[58] = 0;
   out_986548921908989728[59] = 0;
   out_986548921908989728[60] = 0;
   out_986548921908989728[61] = 0;
   out_986548921908989728[62] = 0;
   out_986548921908989728[63] = 0;
   out_986548921908989728[64] = 0;
   out_986548921908989728[65] = 0;
}
void h_14(double *state, double *unused, double *out_302101887128481646) {
   out_302101887128481646[0] = state[10];
   out_302101887128481646[1] = state[11];
   out_302101887128481646[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2751790554611733494) {
   out_2751790554611733494[0] = 0;
   out_2751790554611733494[1] = 0;
   out_2751790554611733494[2] = 0;
   out_2751790554611733494[3] = 0;
   out_2751790554611733494[4] = 0;
   out_2751790554611733494[5] = 0;
   out_2751790554611733494[6] = 0;
   out_2751790554611733494[7] = 0;
   out_2751790554611733494[8] = 0;
   out_2751790554611733494[9] = 0;
   out_2751790554611733494[10] = 1;
   out_2751790554611733494[11] = 0;
   out_2751790554611733494[12] = 0;
   out_2751790554611733494[13] = 0;
   out_2751790554611733494[14] = 0;
   out_2751790554611733494[15] = 0;
   out_2751790554611733494[16] = 0;
   out_2751790554611733494[17] = 0;
   out_2751790554611733494[18] = 0;
   out_2751790554611733494[19] = 0;
   out_2751790554611733494[20] = 0;
   out_2751790554611733494[21] = 0;
   out_2751790554611733494[22] = 0;
   out_2751790554611733494[23] = 0;
   out_2751790554611733494[24] = 0;
   out_2751790554611733494[25] = 0;
   out_2751790554611733494[26] = 0;
   out_2751790554611733494[27] = 0;
   out_2751790554611733494[28] = 0;
   out_2751790554611733494[29] = 0;
   out_2751790554611733494[30] = 0;
   out_2751790554611733494[31] = 0;
   out_2751790554611733494[32] = 0;
   out_2751790554611733494[33] = 1;
   out_2751790554611733494[34] = 0;
   out_2751790554611733494[35] = 0;
   out_2751790554611733494[36] = 0;
   out_2751790554611733494[37] = 0;
   out_2751790554611733494[38] = 0;
   out_2751790554611733494[39] = 0;
   out_2751790554611733494[40] = 0;
   out_2751790554611733494[41] = 0;
   out_2751790554611733494[42] = 0;
   out_2751790554611733494[43] = 0;
   out_2751790554611733494[44] = 0;
   out_2751790554611733494[45] = 0;
   out_2751790554611733494[46] = 0;
   out_2751790554611733494[47] = 0;
   out_2751790554611733494[48] = 0;
   out_2751790554611733494[49] = 0;
   out_2751790554611733494[50] = 0;
   out_2751790554611733494[51] = 0;
   out_2751790554611733494[52] = 0;
   out_2751790554611733494[53] = 0;
   out_2751790554611733494[54] = 0;
   out_2751790554611733494[55] = 0;
   out_2751790554611733494[56] = 1;
   out_2751790554611733494[57] = 0;
   out_2751790554611733494[58] = 0;
   out_2751790554611733494[59] = 0;
   out_2751790554611733494[60] = 0;
   out_2751790554611733494[61] = 0;
   out_2751790554611733494[62] = 0;
   out_2751790554611733494[63] = 0;
   out_2751790554611733494[64] = 0;
   out_2751790554611733494[65] = 0;
}
void h_33(double *state, double *unused, double *out_3412008473235288356) {
   out_3412008473235288356[0] = state[16];
   out_3412008473235288356[1] = state[17];
   out_3412008473235288356[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5020566720731575659) {
   out_5020566720731575659[0] = 0;
   out_5020566720731575659[1] = 0;
   out_5020566720731575659[2] = 0;
   out_5020566720731575659[3] = 0;
   out_5020566720731575659[4] = 0;
   out_5020566720731575659[5] = 0;
   out_5020566720731575659[6] = 0;
   out_5020566720731575659[7] = 0;
   out_5020566720731575659[8] = 0;
   out_5020566720731575659[9] = 0;
   out_5020566720731575659[10] = 0;
   out_5020566720731575659[11] = 0;
   out_5020566720731575659[12] = 0;
   out_5020566720731575659[13] = 0;
   out_5020566720731575659[14] = 0;
   out_5020566720731575659[15] = 0;
   out_5020566720731575659[16] = 1;
   out_5020566720731575659[17] = 0;
   out_5020566720731575659[18] = 0;
   out_5020566720731575659[19] = 0;
   out_5020566720731575659[20] = 0;
   out_5020566720731575659[21] = 0;
   out_5020566720731575659[22] = 0;
   out_5020566720731575659[23] = 0;
   out_5020566720731575659[24] = 0;
   out_5020566720731575659[25] = 0;
   out_5020566720731575659[26] = 0;
   out_5020566720731575659[27] = 0;
   out_5020566720731575659[28] = 0;
   out_5020566720731575659[29] = 0;
   out_5020566720731575659[30] = 0;
   out_5020566720731575659[31] = 0;
   out_5020566720731575659[32] = 0;
   out_5020566720731575659[33] = 0;
   out_5020566720731575659[34] = 0;
   out_5020566720731575659[35] = 0;
   out_5020566720731575659[36] = 0;
   out_5020566720731575659[37] = 0;
   out_5020566720731575659[38] = 0;
   out_5020566720731575659[39] = 1;
   out_5020566720731575659[40] = 0;
   out_5020566720731575659[41] = 0;
   out_5020566720731575659[42] = 0;
   out_5020566720731575659[43] = 0;
   out_5020566720731575659[44] = 0;
   out_5020566720731575659[45] = 0;
   out_5020566720731575659[46] = 0;
   out_5020566720731575659[47] = 0;
   out_5020566720731575659[48] = 0;
   out_5020566720731575659[49] = 0;
   out_5020566720731575659[50] = 0;
   out_5020566720731575659[51] = 0;
   out_5020566720731575659[52] = 0;
   out_5020566720731575659[53] = 0;
   out_5020566720731575659[54] = 0;
   out_5020566720731575659[55] = 0;
   out_5020566720731575659[56] = 0;
   out_5020566720731575659[57] = 0;
   out_5020566720731575659[58] = 0;
   out_5020566720731575659[59] = 0;
   out_5020566720731575659[60] = 0;
   out_5020566720731575659[61] = 0;
   out_5020566720731575659[62] = 1;
   out_5020566720731575659[63] = 0;
   out_5020566720731575659[64] = 0;
   out_5020566720731575659[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5931037656412210587) {
  H(in_vec, out_5931037656412210587);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_238307230270618879) {
  err_fun(nom_x, delta_x, out_238307230270618879);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6996259531543842646) {
  inv_err_fun(nom_x, true_x, out_6996259531543842646);
}
void live_H_mod_fun(double *state, double *out_8148689651805700146) {
  H_mod_fun(state, out_8148689651805700146);
}
void live_f_fun(double *state, double dt, double *out_902112657953448943) {
  f_fun(state,  dt, out_902112657953448943);
}
void live_F_fun(double *state, double dt, double *out_8903580631120383034) {
  F_fun(state,  dt, out_8903580631120383034);
}
void live_h_4(double *state, double *unused, double *out_7028545921639587217) {
  h_4(state, unused, out_7028545921639587217);
}
void live_H_4(double *state, double *unused, double *out_4535428380652713976) {
  H_4(state, unused, out_4535428380652713976);
}
void live_h_9(double *state, double *unused, double *out_302101887128481646) {
  h_9(state, unused, out_302101887128481646);
}
void live_H_9(double *state, double *unused, double *out_2751790554611733494) {
  H_9(state, unused, out_2751790554611733494);
}
void live_h_10(double *state, double *unused, double *out_7103874480815483869) {
  h_10(state, unused, out_7103874480815483869);
}
void live_H_10(double *state, double *unused, double *out_79742523300234424) {
  H_10(state, unused, out_79742523300234424);
}
void live_h_12(double *state, double *unused, double *out_4435864690509638899) {
  h_12(state, unused, out_4435864690509638899);
}
void live_H_12(double *state, double *unused, double *out_7530057316014104644) {
  H_12(state, unused, out_7530057316014104644);
}
void live_h_35(double *state, double *unused, double *out_2551716309463514366) {
  h_35(state, unused, out_2551716309463514366);
}
void live_H_35(double *state, double *unused, double *out_8171123725370433263) {
  H_35(state, unused, out_8171123725370433263);
}
void live_h_32(double *state, double *unused, double *out_8595242243604104642) {
  h_32(state, unused, out_8595242243604104642);
}
void live_H_32(double *state, double *unused, double *out_2369819353162820705) {
  H_32(state, unused, out_2369819353162820705);
}
void live_h_13(double *state, double *unused, double *out_1530891615425827232) {
  h_13(state, unused, out_1530891615425827232);
}
void live_H_13(double *state, double *unused, double *out_986548921908989728) {
  H_13(state, unused, out_986548921908989728);
}
void live_h_14(double *state, double *unused, double *out_302101887128481646) {
  h_14(state, unused, out_302101887128481646);
}
void live_H_14(double *state, double *unused, double *out_2751790554611733494) {
  H_14(state, unused, out_2751790554611733494);
}
void live_h_33(double *state, double *unused, double *out_3412008473235288356) {
  h_33(state, unused, out_3412008473235288356);
}
void live_H_33(double *state, double *unused, double *out_5020566720731575659) {
  H_33(state, unused, out_5020566720731575659);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
